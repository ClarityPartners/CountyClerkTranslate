<?php

/**
 * @file
 * Custom functions for the Government Google Custom Search.
 */

/**
 * Implementation of hook_menu()
 */
function gov_google_menu() {
  // Here we set up the page where the results will display:
  $items['search-results'] = array(  // Change this url to wherever you want the page to be
    'title' => 'Search ',
    'description' => 'Government Google Custom Search',
    'page callback' => 'gov_google_searchpage',
    // The function that will be called to set up the search page
    'access arguments' => array('use_google_custom_search'),
    // Those with this permission will be allowed to see the results
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */

function gov_google_permission() {
  return array(
    'use_google_custom_search' => array(
      'title' => t('Use google custom search'),
      'description' => t('Users that have access to the google search results page.'),
    ),
  );
}

function gov_google_searchpage() {
  $content = '';
  // This is the search box again - so that it also appears at the top of the search page.
  $content .= '<gcse:searchbox-only queryParameterName="as_q" resultsUrl="/search-results"></gcse:searchbox-only>';
  // Drupal search link:
  // This creates a link to the Drupal standard search from the Google results page:
  //$content .= l(t('Advanced search'), 'search/node/' . $_GET['as_q']);
  // This is the code for the results list.
  // Note we also add the queryParameterName setting here to the code. See
  // developers.google.com/custom-search/docs/element#supported_attributes
  // for a full list of supported attributes.
  // I've also set it so links to pages in the results open in the same window rather
  // than a new tab/window which is the default.
  $content .= '<gcse:searchresults-only queryParameterName="as_q" linkTarget="_self"></gcse:searchresults-only>';
  return $content;
}

/**
 * Implementation of hook_block_info().
 *
 * This search is set up to work with the two page search option. See: www.google.co.uk/cse/
 *
 */
function gov_google_block_info() {
  // This example comes from node.module.
  $blocks['google_custom_search'] = array(
    'info' => t('Government Google Custom Search'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */

function gov_google_block_view($delta = '') {
  // This example is adapted from node.module.
  $block['title'] = t('');
  $block['content'] = array(
    '#markup' => '<gcse:searchbox-only queryParameterName="as_q" resultsUrl="/search-results"></gcse:searchbox-only>',
    '#attached' => array(
      'js' => array(
        drupal_get_path('module', 'gov_google') . '/gov_google.js',
      ),
    ),
  );
  return $block;

}

/**
 * Implementation of drupal_add_css()
 */
drupal_add_css(drupal_get_path('module', 'gov_google') . '/gov_google.css');

/**
 * Implementation of hook_block().
 */
//function gov_google_block($op = 'list', $delta = 0, $edit = array()) {
// if ($op == 'list') {
//   $blocks['google_custom_search']['info'] = t('My Google Custom Search');
// Note, we can't cache this block as it will be set up to include some javascript
// in the head of the page if the block is called from the cache this javascript
// won't be included.
//  $blocks['google_custom_search']['cache'] = BLOCK_NO_CACHE;
//  return $blocks;
// }
// else if ($delta == 'google_custom_search' && $op == 'view' && user_access('use my google custom search')) {
//  $block['title'] = t('Search');
//  drupal_add_js(drupal_get_path('module', 'gov_google') . '/gov_google.js', 'module', 'header');
// Note, the following comes from the first element code box on Google, but
// we have set the query parameter name here so it doesn't interfere with Drupal.
// See: libretechtips.com/tips-drupal7-drupal6/how-use-google-cse-drupal
//  $block['content'] = '<gcse:searchbox-only queryParameterName="my_gcs"></gcse:searchbox-only>';
// return $block;
// }
//}

